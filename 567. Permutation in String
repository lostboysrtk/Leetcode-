class Solution {
    public boolean checkInclusion(String s1, String s2) {
        if (s1.length() > s2.length()) return false;

        int[] s1Count = new int[26];

        // Count the frequency of characters in s1 and the first window of s2
        for (int i = 0; i < s1.length(); i++) {
            s1Count[s1.charAt(i) - 'a']++;
        }
        int windSize=s1.length();

        // Slide the window over s2
        for(int i=0;i<s2.length();i++){
            int windIdx=0;
            int idx=i;
            int windFreq[]=new int[26];
            while(windIdx<windSize && idx<s2.length()){
                windFreq[s2.charAt(idx)-'a']++;
                windIdx++;
                idx++;
            }
            if(isFreqSame(s1Count,windFreq)){
                return true;
            }
        }
        return false;
    }

    public boolean isFreqSame(int[] s1Count, int[] s2Count) {
        for (int i = 0; i < 26; i++) {
            if (s1Count[i] != s2Count[i]) return false;
        }
        return true;
    }
}
